{"ast":null,"code":"import valid from \"card-validator\";\nexport default function Validation(values) {\n  // errors dict\n  let errors = {}; // credit card object using the valid package\n\n  let creditCard = valid.number(values.cardNumber); // filling out details of the credit card object\n\n  creditCard.expirationDate = valid.expirationDate(values.cardExpiration);\n  creditCard.cvv = valid.cvv(values.cardSecurityCode);\n  creditCard.cardholderName = valid.cardholderName(values.cardName); // default errors\n\n  errors.show = true;\n  errors.variant = \"danger\";\n  errors.message = \"An unknown error occured. Please try again later\";\n  errors.cname = false;\n  errors.cnumber = false;\n  errors.cexp = false;\n  errors.ccvv = false; // series of if else statements to handle errors for each detail\n  // CVV\n\n  if (!values.cardSecurityCode) {\n    errors.message = \"Credit card CVC is required\";\n  } else if (creditCard.cvv.isValid) {\n    errors.ccvv = true;\n  } else {\n    errors.message = \"Credit card CVC is invalid\";\n  } // Expiration\n\n\n  if (!values.cardExpiration) {\n    errors.message = \"Credit card expiration date is required\";\n  } else if (creditCard.expirationDate.isValid) {\n    errors.cexp = true;\n  } else {\n    errors.message = \"Credit card expiration date is invalid\";\n  } // Card Number\n\n\n  if (!values.cardNumber) {\n    errors.message = \"Credit card number is required\";\n  } else if (values.cardNumber.toString().length !== 16) {\n    errors.message = \"Credit card number needs to be 16 digits\";\n  } else if (values.cardNumber || creditCard.isValid) {\n    errors.cnumber = true;\n  } else {\n    errors.message = \"Credit card number is invalid\";\n  } // Owner Name\n\n\n  if (!values.cardName) {\n    errors.message = \"Owner name is required\";\n  } else if (creditCard.cardholderName.isValid) {\n    errors.cname = true;\n  } else {\n    errors.message = \"Cardholder name is invalid\";\n  } // After every detail is valid\n\n\n  if (errors.cname && errors.cnumber && errors.cexp && errors.ccvv) {\n    errors.variant = \"success\";\n    errors.message = \"Credit Card is valid\";\n  }\n\n  return errors;\n}\n_c = Validation;\n\nvar _c;\n\n$RefreshReg$(_c, \"Validation\");","map":{"version":3,"sources":["/Users/willam/Documents/code/React/credit-cards/src/Functions/Validation.js"],"names":["valid","Validation","values","errors","creditCard","number","cardNumber","expirationDate","cardExpiration","cvv","cardSecurityCode","cardholderName","cardName","show","variant","message","cname","cnumber","cexp","ccvv","isValid","toString","length"],"mappings":"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","sourcesContent":["import valid from \"card-validator\";\n\nexport default function Validation(values) {\n    // errors dict\n    let errors = {};\n\n    // credit card object using the valid package\n    let creditCard = valid.number(values.cardNumber);\n\n    // filling out details of the credit card object\n    creditCard.expirationDate = valid.expirationDate(values.cardExpiration);\n    creditCard.cvv = valid.cvv(values.cardSecurityCode);\n    creditCard.cardholderName = valid.cardholderName(values.cardName);\n\n    // default errors\n    errors.show = true;\n    errors.variant = \"danger\";\n    errors.message = \"An unknown error occured. Please try again later\"\n    errors.cname = false;\n    errors.cnumber = false;\n    errors.cexp = false;\n    errors.ccvv = false;\n\n    // series of if else statements to handle errors for each detail\n\n    // CVV\n    if (!values.cardSecurityCode) {\n        errors.message = \"Credit card CVC is required\";\n    } else if (creditCard.cvv.isValid) {\n        errors.ccvv = true;\n    } else {\n        errors.message = \"Credit card CVC is invalid\";\n    }\n\n    // Expiration\n    if (!values.cardExpiration) {\n        errors.message = \"Credit card expiration date is required\";\n    } else if (creditCard.expirationDate.isValid) {\n        errors.cexp = true;\n    } else {\n        errors.message = \"Credit card expiration date is invalid\";\n    }\n\n    // Card Number\n    if (!values.cardNumber) {\n        errors.message = \"Credit card number is required\";\n    } else if (values.cardNumber.toString().length !== 16) {\n        errors.message = \"Credit card number needs to be 16 digits\";\n    } else if (values.cardNumber || creditCard.isValid) {\n        errors.cnumber = true;\n    } else {\n        errors.message = \"Credit card number is invalid\";\n    }\n\n    // Owner Name\n    if (!values.cardName) {\n        errors.message = \"Owner name is required\";\n    } else if (creditCard.cardholderName.isValid) {\n        errors.cname = true;\n    } else {\n        errors.message = \"Cardholder name is invalid\";\n    }\n\n    // After every detail is valid\n    if ( errors.cname && errors.cnumber && errors.cexp && errors.ccvv) {\n        errors.variant = \"success\";\n        errors.message = \"Credit Card is valid\";\n    }\n\n    return errors;\n}"]},"metadata":{},"sourceType":"module"}