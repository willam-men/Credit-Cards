{"ast":null,"code":"var _jsxFileName = \"/Users/willam/Documents/code/React/credit-cards/src/Components/InfoForm.js\",\n    _s = $RefreshSig$();\n\nimport \"./InfoForm.css\"; // Custom hook used to handle real time input\n\nimport useForm from \"../Hooks/useForm\"; // React Bootstrap import to easily format info form\n\nimport { Button, Form, Alert, Row, Col } from \"react-bootstrap\";\nimport \"bootstrap/dist/css/bootstrap.min.css\"; // React Credit Cards import to easily display credit card overlay\n\nimport Cards from \"react-credit-cards\";\nimport \"react-credit-cards/es/styles-compiled.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst InfoForm = () => {\n  _s();\n\n  // Custom hook used to handle real time input, focusing, and validation\n  const {\n    handleChange,\n    handleFocus,\n    handleSubmit,\n    values,\n    errors\n  } = useForm();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"FormBackground\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"FormContainer\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"CreditCard\",\n        children: /*#__PURE__*/_jsxDEV(Cards // feed through all details of credit card from \n        // the use form hook\n        , {\n          cvc: values.cardSecurityCode,\n          expiry: values.cardExpiration,\n          focused: values.focus,\n          name: values.cardName,\n          number: values.cardNumber\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(Form, {\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n          children: [\"Owner\", /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"text\",\n            id: \"cardName\",\n            name: \"cardName\",\n            placeholder: \"Owner\",\n            value: values.cardName,\n            onChange: handleChange,\n            onFocus: handleFocus,\n            isValid: errors.cname\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          children: [\"Card Number\", /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"number\",\n            id: \"cardNumber\",\n            name: \"cardNumber\",\n            placeholder: \"Card Number\",\n            value: values.cardNumber,\n            onChange: handleChange,\n            onFocus: handleFocus,\n            isValid: errors.cnumber\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Row, {\n          children: [/*#__PURE__*/_jsxDEV(Col, {\n            children: /*#__PURE__*/_jsxDEV(Form.Group, {\n              children: [\"Expiration\", /*#__PURE__*/_jsxDEV(Form.Control, {\n                type: \"text\",\n                id: \"cardExpiration\",\n                name: \"cardExpiration\",\n                placeholder: \"Expiration Date\",\n                value: values.cardExpiration,\n                onChange: handleChange,\n                onFocus: handleFocus,\n                isValid: errors.cexp\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 63,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 61,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Col, {\n            children: /*#__PURE__*/_jsxDEV(Form.Group, {\n              children: [\"Security Code\", /*#__PURE__*/_jsxDEV(Form.Control, {\n                type: \"number\",\n                id: \"cardSecurityCode\",\n                name: \"cardSecurityCode\",\n                placeholder: \"Security Code\",\n                value: values.cardSecurityCode,\n                onChange: handleChange,\n                onFocus: handleFocus,\n                isValid: errors.ccvv\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 78,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 76,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          className: \"Submit\",\n          size: \"block\",\n          id: \"validateButton\",\n          type: \"submit\",\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(Alert, {\n        id: \"alertMessage\",\n        variant: errors.variant,\n        show: errors.show,\n        children: errors.message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 21\n      }, this), \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 17\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 13\n  }, this);\n};\n\n_s(InfoForm, \"ah78Q5GzhR+SAcMFEQd6smtJg1I=\", false, function () {\n  return [useForm];\n});\n\n_c = InfoForm;\nexport default InfoForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"InfoForm\");","map":{"version":3,"sources":["/Users/willam/Documents/code/React/credit-cards/src/Components/InfoForm.js"],"names":["useForm","Button","Form","Alert","Row","Col","Cards","InfoForm","handleChange","handleFocus","handleSubmit","values","errors","cardSecurityCode","cardExpiration","focus","cardName","cardNumber","cname","cnumber","cexp","ccvv","variant","show","message"],"mappings":"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","sourcesContent":["import \"./InfoForm.css\";\n\n// Custom hook used to handle real time input\nimport useForm from \"../Hooks/useForm\";\n\n// React Bootstrap import to easily format info form\nimport { Button, Form, Alert, Row, Col } from \"react-bootstrap\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\n// React Credit Cards import to easily display credit card overlay\nimport Cards from \"react-credit-cards\";\nimport \"react-credit-cards/es/styles-compiled.css\";\n\nconst InfoForm = () => {\n\n    // Custom hook used to handle real time input, focusing, and validation\n    const { handleChange, handleFocus, handleSubmit, values, errors } = useForm();\n    return (\n            <div className=\"FormBackground\">\n                <div className=\"FormContainer\">\n                    <div className=\"CreditCard\">\n                        <Cards\n                            // feed through all details of credit card from \n                            // the use form hook\n                            cvc={values.cardSecurityCode}\n                            expiry={values.cardExpiration}\n                            focused={values.focus}\n                            name={values.cardName}\n                            number={values.cardNumber}\n                        />\n                    </div>\n                    <Form onSubmit={handleSubmit}>\n                        <Form.Group>\n                            Owner\n                            <Form.Control\n                                type=\"text\"\n                                id=\"cardName\"\n                                name=\"cardName\"\n                                placeholder=\"Owner\"\n                                value={values.cardName}\n                                onChange={handleChange}\n                                onFocus={handleFocus}\n                                isValid={errors.cname}\n                            />\n                        </Form.Group>\n                        <Form.Group>\n                            Card Number\n                            <Form.Control\n                                type=\"number\"\n                                id=\"cardNumber\"\n                                name=\"cardNumber\"\n                                placeholder=\"Card Number\"\n                                value={values.cardNumber}\n                                onChange={handleChange}\n                                onFocus={handleFocus}\n                                isValid={errors.cnumber}\n                            />\n                        </Form.Group>\n                        <Row>\n                            <Col>\n                                <Form.Group>\n                                    Expiration\n                                    <Form.Control\n                                        type=\"text\"\n                                        id=\"cardExpiration\"\n                                        name=\"cardExpiration\"\n                                        placeholder=\"Expiration Date\"\n                                        value={values.cardExpiration}\n                                        onChange={handleChange}\n                                        onFocus={handleFocus}\n                                        isValid={errors.cexp}\n                                    />\n                                </Form.Group>\n                            </Col>\n                            <Col>\n                                <Form.Group>\n                                    Security Code\n                                    <Form.Control\n                                        type=\"number\"\n                                        id=\"cardSecurityCode\"\n                                        name=\"cardSecurityCode\"\n                                        placeholder=\"Security Code\"\n                                        value={values.cardSecurityCode}\n                                        onChange={handleChange}\n                                        onFocus={handleFocus}\n                                        isValid={errors.ccvv}\n                                    />\n                                </Form.Group>\n                            </Col>\n                        </Row>\n                        <Button\n                            className=\"Submit\"\n                            size={\"block\"}\n                            id=\"validateButton\"\n                            type=\"submit\"\n                        >\n                            Submit\n                        </Button>\n                    </Form>\n                    <Alert\n                        id=\"alertMessage\"\n                        variant={errors.variant}\n                        show={errors.show}\n                    >\n                        {errors.message}\n                    </Alert>{\" \"}\n                </div>\n            </div>\n    );\n};\n\nexport default InfoForm;"]},"metadata":{},"sourceType":"module"}